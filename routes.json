{
  "routes": [
    {
      "api/status": {
        "method": "GET",
        "handler": "GetApiStatus"
      }
    },

    {
      "api/list": {
        "method": "GET",
        "handler": "GetApiList"
      }
    },

    {
      "api/user/login": {
        "method": "POST",
        "handler": "Read",
        "args": [
          {"user_email": "string", "required": true},
          {"user_password": "string", "required": true, "encrypted": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "user",
          "fields": [
            "user_id",
            "display_name",
            "user_avatar"
          ]
        }
      }
    },

    {
      "api/qrc": {
        "method": "GET",
        "handler": "GetQrc",
        "args": [{
          "url": "string", "required": true
        }]
      }
    },

    {
      "api/user/email/verify": {
        "method": "POST",
        "handler": "VerifyUserEmail",
        "args": [
          {"user_email": "string", "required":  true}
        ]
      }
    },

    {
      "api/user": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"user_id": "string"},
          {"user_name": "string"},
          {"user_email": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "user",
          "order": [
            {"user_id": "asc"}
          ]
        }
      }
    },

    {
      "api/user/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"user_name": "string", "required":  true},
          {"user_email": "string", "required":  true},
          {"display_name": "string"},
          {"user_password": "string", "required":  true},
          {"user_avatar": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "user"
        }
      }
    },

    {
      "api/user/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"user_password": "string"},
          {"user_name": "string"},
          {"user_email": "string"},
          {"display_name": "string"},
          {"user_avatar": "string"},
          {"keys": [
            {"user_id": "int", "required":  true}
          ]}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "user"
        }
      }
    },

    {
      "api/user/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"user_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "user"
        }
      }
    },

    {
      "api/ballot": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"ballot_id": "int"},
          {"election": "string"},
          {"offset": "int"},
          {"limit": "int"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot",
          "order": [
            {"ballot_id": "asc"}
          ]
        }
      }
    },

    {
      "api/ballot/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"client": "string", "required": true},
          {"election": "string", "required": true},
          {"address": "string", "required": true},
          {"board": "string"},
          {"start_date": "timestamp", "required": true},
          {"end_date": "timestamp", "required": true},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot"
        }
      }
    },

    {
      "api/ballot/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"client": "string"},
          {"election": "string"},
          {"address": "string"},
          {"board": "string"},
          {"is_delete":"string"},
          {"modified_at": "timestamp"},
          {"modified_by": "string"},
          {"keys": [
            {"ballot_id": "int", "required":  true}
          ]}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot"
        }
      }
    },

    {
      "api/ballot/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
           {"ballot_id": "int", "required":  true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot"
        }
      }
    },

    {
      "api/ballot/country": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"ballot_id": "int"},
          {"state_id": "int"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot_country_view"
        }
      }
    },

    {
      "api/ballot/country/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"ballot_id": "int", "required": true},
          {"state_id": "int", "required": true},
          {"country_id": "int", "required": true},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot_country"
        }
      }
    },

    {
      "api/ballot/country/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"ballot_id": "int", "required": true},
          {"state_id": "int", "required": true},
          {"country_id": "int", "required": true},
          {"modified_at": "timestamp"},
          {"modified_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot_country"
        }
      }
    },

    {
      "api/ballot/country/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"ballot_country_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot_country"
        }
      }
    },

    {
      "api/ballot/language": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"ballot_id": "int"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot_language_view"
        }
      }
    },

    {
      "api/ballot/language/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"ballot_id": "int", "required": true},
          {"lang_id": "int", "required": true},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot_language"
        }
      }
    },

    {
      "api/ballot/language/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"ballot_id": "int", "required": true},
          {"lang_id": "int", "required": true},
          {"modified_at": "timestamp"},
          {"modified_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot_language"
        }
      }
    },

    {
      "api/ballot/language/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"ballot_lang_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "ballot_language"
        }
      }
    },

    {
      "api/ballot/party": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"ballot_id": "int"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "party"
        }
      }
    },

    {
      "api/ballot/party/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"ballot_id": "int", "required": true},
          {"party_name": "string", "required": true},
          {"party_logo": "string"},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "party"
        }
      }
    },

    {
      "api/ballot/party/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"ballot_id": "int", "required": true},
          {"party_name": "string", "required": true},
          {"party_logo": "string"},
          {"modified_at": "timestamp"},
          {"modified_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "party"
        }
      }
    },

    {
      "api/ballot/party/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"party_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "party"
        }
      }
    },
    
    {
      "api/race": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"ballot_id": "int"},
          {"race_id": "int"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "race",
          "order": [
            {"race_id": "asc"}
          ]
        }
      }
    },

    {
      "api/race/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"ballot_id": "int", "required": true},
          {"race_title": "string", "required": true},
          {"race_voted_position": "string"},
          {"race_name": "string"},
          {"min_num_of_votes": "int"},
          {"max_num_of_votes": "int"},
          {"max_num_of_write_ins":"int"},
          {"race_type":"string"},
          {"race_lang_id":"int"},
          {"race_location_id":"int"},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "race"
        }
      }
    },

    {
      "api/race/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"race_title": "string"},
          {"race_voted_position": "string"},
          {"race_name": "string"},
          {"min_num_of_votes": "int"},
          {"max_num_of_votes": "int"},
          {"max_num_of_write_ins":"int"},
          {"race_type":"string"},
          {"race_lang_id":"int"},
          {"race_location_id":"int"},
          {"modified_at": "timestamp"},
          {"modified_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "race"
        }
      }
    },

    {
      "api/race/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"race_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "race"
        }
      }
    },

    {
      "api/race/candidate": {
        "method": "POST",
        "handler": "Read",
        "args": [
          {"race_id": "int"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "race_candidate_view",
          "order": [
            {"candidate_id": "asc"}
          ]
        }
      }
    },




    {
      "api/proposition": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"ballot_id": "int"},
          {"proposition_id": "int"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "proposition",
          "order": [
            {"proposition_id": "asc"}
          ]
        }
      }
    },

    {
      "api/proposition/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"ballot_id": "int", "required": true},
          {"prop_name": "string", "required": true},
          {"prop_title": "string"},
          {"prop_text": "string"},
          {"prop_answer_type": "string"},
          {"prop_lang_id": "int"},
          {"prop_location_id":"int"},
          {"prop_type":"string"},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "proposition"
        }
      }
    },

    {
      "api/proposition/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"prop_name": "string"},
          {"prop_title": "string"},
          {"prop_text": "string"},
          {"prop_answer_type": "int"},
          {"prop_lang_id": "int"},
          {"prop_location_id":"int"},
          {"modified_at": "timestamp"},
          {"modified_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "proposition"
        }
      }
    },

    {
      "api/proposition/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"proposition_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "proposition"
        }
      }
    },
    
    {
      "api/pincode/create": {
        "method": "POST",
        "handler": "CreatePinCode",
        "args": [
          {"ballot_id": "int", "required": true},
          {"is_active": "boolean"},
          {"expiration_time": "timestamp"},
          {"pincode_len": "int"},
          {"voter_id": "int"},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "pincode"
        }
      }
    },

    {
      "api/pincode": {
        "method": "GET,POST",
        "handler": "Read",
        "args": [
          {"ballot_id": "int"},
          {"pin": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "pincode",
          "order": [
            {"ballot_id": "asc"}
          ]
        }
      }
    },

    {
      "api/pincode/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"is_active": "boolean"},
          {"expiration_time": "timestamp"},
          {"modified_at": "timestamp"},
          {"modified_by": "string"},
          {"keys": [
            {"pin": "string", "required":  true}
          ]}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "pincode"
        }
      }
    },

    {
      "api/pincode/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"ballot_id": "int", "required": true},
          {"pin": "string", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "pincode"
        }
      }
    },

    {
      "api/language/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"language_code": "string", "required": true},
          {"language_name": "string", "required": true},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "language"
        }
      }
    },

    {
      "api/language": {
        "method": "GET",
        "handler": "Read",
        "data-source": {
          "schema": "votrite",
          "name": "language",
          "order": [
            {"language_name": "asc"}
          ]
        }
      }
    },

    {
      "api/language/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"language_code": "string"},
          {"language_name": "string"},
          {"modified_at": "timestamp"},
          {"modified_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "language"
        }
      }
    },
    
    {
      "api/language/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"language_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "language"
        }
      }
    },

    {
      "api/location/state/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"state_code": "string", "required": true},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "location_state"
        }
      }
    },

    {
      "api/location/state": {
        "method": "GET",
        "handler": "Read",
        "data-source": {
          "schema": "votrite",
          "name": "location_state",
          "order": [
            {"state_code": "asc"}
          ]
        }
      }
    },

    {
      "api/location/state/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"state_code": "string"},
          {"modified_at": "timestamp"},
          {"modified_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "location_state"
        }
      }
    },
    
    {
      "api/location/state/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"state_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "location_state"
        }
      }
    },

    {
      "api/location/country/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"state_id": "int", "required": true},
          {"country_name": "string", "required": true},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "location_country"
        }
      }
    },

    {
      "api/location/country": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"state_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "location_country",
          "order": [
            {"country_id": "asc"}
          ]
        }
      }
    },

    {
      "api/location/country/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"country_name": "string"},
          {"modified_at": "timestamp"},
          {"modified_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "location_country"
        }
      }
    },
    
    {
      "api/location/country/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"country_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "location_country"
        }
      }
    },

    {
      "api/session/new": {
        "method": "GET",
        "handler": "NewSession"
      }
    },


    {
      "api/candidate/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"race_id": "int", "required": true},
          {"candidate_name": "string", "required": true},
          {"email": "string"},
          {"photo": "string"},
          {"party_id": "int"},
          {"lang_id": "int"},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "candidate"
        }
      }
    },

    {
      "api/candidate": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"ballot_id": "int"},
          {"race_id": "int"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "candidate_view",
          "order": [
            {"candidate_id": "asc"}
          ]
        }
      }
    },

    {
      "api/candidate/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"candidate_name": "string", "required": true},
          {"email": "string"},
          {"photo": "string"},
          {"party_id": "int"},
          {"lang_id": "int"},
          {"modified_at": "timestamp"},
          {"modified_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "candidate"
        }
      }
    },

    {
      "api/candidate/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"candidate_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "candidate"
        }
      }
    },
    
    {
      "api/voter/createPin": {
        "method": "POST",
        "handler": "CreateVoter",
        "args": [
          {"ballot_id": "int", "required": true},
          {"voter_email": "string", "required": true},
          {"voter_phone": "string", "required": true},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "voter"
        }
      }
    },

    {
      "api/voter/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"voter_email": "string", "required": true},
          {"voter_phone": "string", "required": true},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "voter"
        }
      }
    },

    {
      "api/voter": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"voter_email": "string"},
          {"voter_phone": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "voter",
          "order": [
            {"voter_id": "asc"}
          ]
        }
      }
    },

    {
      "api/voter/update": {
        "method": "POST",
        "handler": "Update",
        "args": [
          {"voter_email": "string"},
          {"voter_phone": "string"},
          {"modified_at": "timestamp"},
          {"modified_by": "string"},
          {"keys": [
            {"voter_id": "int", "required":  true}
          ]}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "voter"
        }
      }
    },

    {
      "api/voter/delete": {
        "method": "POST",
        "handler": "Delete",
        "args": [
          {"voter_id": "int", "required": true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "voter"
        }
      }
    },

    {
      "api/translate": {
        "method": "POST",
        "handler": "TranslateText",
        "args": [
          {"text": "string", "required": true},
          {"targetLang": "string", "required": true}
        ]
      }
    },

    {
      "api/translate/screen": {
        "method": "POST",
        "handler": "TranslateScreen"
      }
    },

    {
      "api/translate/language/supported": {
        "method": "GET",
        "handler": "TranslationSupportedLanguages"
      }
    },

    {
      "api/counter/candidate/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"ballot_id": "int", "required": true},
          {"race_id": "int", "required": true},
          {"candidate_id": "int", "required": true},
          {"cast_value": "string"},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "candidate_counter"
        }
      }
    },

    {
      "api/counter/candidate": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"ballot_id": "int", "required":  true},
          {"race_id": "int"},
          {"candidate_id": "int", "required":  true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "candidate_counter",
          "order": [
            {"candidate_id": "asc"}
          ]
        }
      }
    },

    {
      "api/counter/cast/create": {
        "method": "POST",
        "handler": "Create",
        "args": [
          {"election_id": "int", "required": true},
          {"ballot_id": "int", "required": true},
          {"session_id": "string", "required": true},
          {"created_at": "timestamp"},
          {"created_by": "string"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "cast_counter"
        }
      }
    },

    {
      "api/counter/cast": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"election_id": "int", "required":  true},
          {"ballot_id": "int", "required":  true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "cast_counter",
          "order": [
            {"election_id": "asc"}
          ]
        }
      }
    },

    {
      "api/counter/cast/count": {
        "method": "GET",
        "handler": "Mixin",
        "data-source": {
          "schema": "votrite",
          "query": "select count(*) as \"cast_count\" from voting.cast_counter"
        }
      }
    },

    {
      "api/result/candidate": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"ballot_id": "int", "required":  true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "result_candidate"
        }
      }
    },
    {
      "api/result/proposition": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"ballot_id": "int", "required":  true}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "result_proposition"
        }
      }
    },

    {
      "api/result/all": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"ballot_id": "int"}
        ],
        "data-source": {
          "schema": "votrite",
          "name": "result_all"
        }
      }
    },


    {
      "api/election/results/candidate": {
        "method": "POST",
        "handler": "Mixin",
        "args": [
          {"election_id": "int", "required":  true},
          {"ballot_id": "int", "required":  true}
        ],
        "data-source": {
          "schema": "votrite",
          "query": "select c.candidate_id,\n       c.first_name,\n       c.last_name, c.photo,\n       count(cc.session_id) as \"cast_counter\",\n       sum(cc.cast_value) as \"cast_value\"\nfrom voting.candidate c\ninner join voting.candidate_counter cc on c.candidate_id=cc.candidate_id\nwhere cc.election_id=$1 and cc.ballot_id=$2\ngroup by c.candidate_id, c.first_name, c.last_name\norder by \"cast_value\" desc"
        }
      }
    },

    {
      "api/election/results/proposition": {
        "method": "POST",
        "handler": "Mixin",
        "args": [
          {"election_id": "int", "required":  true},
          {"ballot_id": "int", "required":  true}
        ],
        "data-source": {
          "schema": "votrite",
          "query": "select p.proposition_id,\n       p.proposition_name,\n       case when pc.cast_value = '' then 'No selection' else pc.cast_value end,\n       count(pc.session_id) as \"cast_counter\"\nfrom voting.proposition p\ninner join voting.proposition_counter pc on p.proposition_id=pc.proposition_id\nwhere pc.election_id=3 and pc.ballot_id=2\ngroup by p.proposition_id, p.section_text, pc.cast_value\norder by p.proposition_id"
        }
      }
    },

    {
      "api/election/results": {
        "method": "POST",
        "handler": "Mixin",
        "args": [
          {"election_id": "int", "required":  true},
          {"ballot_id": "int", "required":  true}
        ],
        "data-source": {
          "schema": "votrite",
          "query": "select e.election_id, e.title, b.ballot_location, con.contest_type, p.proposition_id, p.proposition_name,\ncase when pc.cast_value = '' then 'Not selected' else pc.cast_value end as \"proposition_cast_value\",\ncase when count(pc.cast_counter) is null then 0 else count(pc.cast_counter) end as \"proposition_cast_counter\",\nr.race_id, r.race_name, r.race_title, r.race_subtitle,\nc.candidate_id, c.candidate_id, c.first_name, c.last_name, c.photo,\ncase when sum(cc.cast_value) is null then 0 else sum(case when con.contest_type = 'FR' then cc.cast_value/100 else cc.cast_value end) end as \"candidate_cast_value\",\ncase when count(cc.cast_counter) is null then 0 else count(cc.cast_counter) end as \"candidate_cast_counter\"\nfrom voting.election e\ninner join voting.ballot b on e.election_id = b.election_id\ninner join voting.contest con on b.ballot_id = con.ballot_id\nleft outer join voting.proposition p on con.contest_id = p.contest_id\nleft outer join voting.proposition_counter pc on p.proposition_id = pc.proposition_id\nleft outer join voting.race r on con.contest_id = r.contest_id\nleft outer join voting.race_candidate rc on r.race_id = rc.race_id\nleft outer join voting.candidate c on rc.candidate_id = c.candidate_id\nleft outer join voting.candidate_counter cc on c.candidate_id = cc.candidate_id\nwhere e.election_id=$1 and b.ballot_id=$2\ngroup by e.election_id, e.title, b.ballot_location, con.contest_type, r.race_id, r.race_name, r.race_title,\nr.race_subtitle, p.proposition_id, p.proposition_name,\npc.cast_value, c.candidate_id, c.candidate_id, c.first_name, c.last_name, c.photo\norder by e.election_id, proposition_cast_counter desc, proposition_cast_value desc, candidate_cast_counter desc, candidate_cast_value desc"
        }
      }
    },

    {
      "api/election/results/all": {
        "method": "GET",
        "handler": "Mixin",
        "data-source": {
          "schema": "votrite",
          "query": "select e.election_id, e.title, b.ballot_location, con.contest_type, p.proposition_id, p.proposition_name,\ncase when pc.cast_value = '' then 'Not selected' else pc.cast_value end as \"proposition_cast_value\",\ncase when count(pc.cast_counter) is null then 0 else count(pc.cast_counter) end as \"proposition_cast_counter\",\nr.race_id, r.race_name, r.race_title, r.race_subtitle,\nc.candidate_id, c.first_name, c.last_name, c.photo,\ncase when sum(cc.cast_value) is null then 0 else sum(case when con.contest_type = 'FR' then cc.cast_value/100 else cc.cast_value end) end as \"candidate_cast_value\",\ncase when count(cc.cast_counter) is null then 0 else count(cc.cast_counter) end as \"candidate_cast_counter\"\nfrom voting.election e\ninner join voting.ballot b on e.election_id = b.election_id\ninner join voting.contest con on b.ballot_id = con.ballot_id\nleft outer join voting.proposition p on con.contest_id = p.contest_id\nleft outer join voting.proposition_counter pc on p.proposition_id = pc.proposition_id\nleft outer join voting.race r on con.contest_id = r.contest_id\nleft outer join voting.race_candidate rc on r.race_id = rc.race_id\nleft outer join voting.candidate c on rc.candidate_id = c.candidate_id\nleft outer join voting.candidate_counter cc on c.candidate_id = cc.candidate_id\ngroup by e.election_id, e.title, b.ballot_location, con.contest_type, r.race_id, r.race_name, r.race_title,\nr.race_subtitle, p.proposition_id, p.proposition_name,\npc.cast_value, c.candidate_id, c.first_name, c.last_name, c.photo\norder by e.election_id, proposition_cast_counter desc, proposition_cast_value desc, candidate_cast_counter desc, candidate_cast_value desc"
        }
      }
    },

    {
      "api/proposition/test": {
        "method": "GET",
        "handler": "Read",
        "args": [
          {"contest_id": "int", "required": true}
        ],
        "data-source": {
          "name": "proposition",
          "dependencies": [
            {
              "data-source": {
                "name": "contest_proposition",
                "key": "proposition_id"
              },
              "dependencies": [
                {
                  "data-source": {
                    "name": "contest",
                    "key": "contest_id"
                  }
                }
              ]
            }
          ]
        }
      }
    }

  ]
}
